services:

  mysql:
    image: mysql
    ports:
      - "${MYSQL_PORT}:${MYSQL_PORT}"
      #- 33060:33060
    environment:
      - "MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}"
    volumes:
      - ./data:/var/lib/mysql
      - ./scripts/init-database.sql:/docker-entrypoint-initdb.d/1.sql
      - ./scripts/fill-database.sql:/docker-entrypoint-initdb.d/2.sql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    command: "mysqld --lower_case_table_names=1"

  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    ports:
      - "${MONGO_PORT}:${MONGO_PORT}"
    volumes:
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    healthcheck:
      test: ["CMD","mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 10s
      retries: 5

  api:
    build: .
    depends_on:
      mysql:
        condition: service_healthy
      mongo:
        condition: service_healthy
    ports:
      - "${API_PORT}:${API_PORT}"
    environment:
      - "MYSQL_HOSTNAME=${MYSQL_HOSTNAME}"
      - "MYSQL_USER=${MYSQL_USER}"
      - "MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}"
      - "MYSQL_DB=${MYSQL_DB}"
      - "MYSQL_PORT=${MYSQL_PORT}"
      - "SECRET=${SECRET}"
      - "API_PORT=${API_PORT}"
      - "MONGO_URI=${MONGO_URI}"


#docker run --rm --name mysql-test -e MYSQL_ROOT_PASSWORD=010203 -p 3306:3306 -d mysql mysqld --lower_case_table_names=1


